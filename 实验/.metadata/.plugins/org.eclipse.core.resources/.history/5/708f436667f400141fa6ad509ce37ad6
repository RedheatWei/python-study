#!/usr/bin/env python
#_*_ coding:utf-8 _*_
'''
Created on 2015年4月30日
Email: weipeng@sinashow.com
@author: Redheat

'''
import os
import time,threading
from socket import *

dir_name = 'D:' #日志目录
file_name = dir_name + '\udp_status.log'#日志名字
HOST = '123.56.92.243'
PORT = 21567
BUFSIZ = 1024
max_size = 5000000#最大日志大小，这里设置的5M
ADDR = (HOST,PORT)
data_sen = '1' * (2**9)
sen_rec = 40
lost = 0
count = 0
error = 0
rec = 0

def log_write(file_name,log):#写入日志，没什么可注释的
    f = open(file_name,'a')
    f.write(log)
    f.close()

def mk_dir(dir_name):#创建目录
    if os.path.isdir(dir_name) == False:
        os.mkdir(dir_name)
        

def log_hadle(file_name):#防止日志过大，处理日志的，执行一次删除前面的一半
    f = open(file_name)
    f_main = f.readlines()
    f.close()
    del f_main[:(len(f_main)/2)]
    f = open(file_name,'w')
    for line in f_main:
        f.write(line)
    f.close()


mk_dir(dir_name)
while True:
    try:
        while os.path.getsize(file_name) < max_size:
            udpCliSock = socket(AF_INET,SOCK_DGRAM)
            udpCliSock.settimeout(0.3)
#            while True:#count < sen_rec:
            udpCliSock.sendto(data_sen,ADDR)
            count += 1
#            print 'send'
            try:
                data_rec,ADDR = udpCliSock.recvfrom(BUFSIZ)
                print data_rec
            except Exception,e:
                data_rec = e
            if data_rec == 'time out':
                lost += 1
            elif 'Errno' in data_rec:
                error += 1
            else:
                rec += 1
            
            udpCliSock.close()
            log = '%s packet_size:%s send:%s recv:%s lost:%s error:%s packet loss rate:%s%% \n' % \
            (time.strftime('%Y-%m-%d %H:%M:%S',time.localtime(time.time())),len(data_sen),count,\
             rec,lost,error,((lost/count)*100))
            log_write(file_name, log)
            time.sleep(2)
#                break
        else:
            log_hadle(file_name)
            continue
    except KeyboardInterrupt,e:
        print e
        log = str(e) + '\n'
        log_write(file_name, log)
        udpCliSock.close()
        break